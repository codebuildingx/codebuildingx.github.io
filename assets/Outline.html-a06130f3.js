const e=JSON.parse('{"key":"v-b307a604","path":"/quick/cpp/Outline.html","title":"c++面经","lang":"zh-CN","frontmatter":{"category":["C++"],"description":"c++基础 c++内存模型 C++内存分为5个区域（堆栈全常代) 堆 heap ： 由new分配的内存块，其释放编译器不去管，由我们程序自己控制（一个new对应一个delete）。如果程序员没有释放掉，在程序结束时OS会自动回收。涉及的问题：“缓冲区溢出”、“内存泄露” 栈 stack ： 是那些编译器在需要时分配，在不需要时自动清除的存储区。存放局部...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/quick/cpp/Outline.html"}],["meta",{"property":"og:site_name","content":"Code Building"}],["meta",{"property":"og:title","content":"c++面经"}],["meta",{"property":"og:description","content":"c++基础 c++内存模型 C++内存分为5个区域（堆栈全常代) 堆 heap ： 由new分配的内存块，其释放编译器不去管，由我们程序自己控制（一个new对应一个delete）。如果程序员没有释放掉，在程序结束时OS会自动回收。涉及的问题：“缓冲区溢出”、“内存泄露” 栈 stack ： 是那些编译器在需要时分配，在不需要时自动清除的存储区。存放局部..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-05T14:05:58.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-05T14:05:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++面经\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-05T14:05:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"c++基础","slug":"c-基础","link":"#c-基础","children":[{"level":3,"title":"c++内存模型","slug":"c-内存模型","link":"#c-内存模型","children":[]},{"level":3,"title":"易混淆的几种指针相关的写法","slug":"易混淆的几种指针相关的写法","link":"#易混淆的几种指针相关的写法","children":[]},{"level":3,"title":"C++中static关键字的作用","slug":"c-中static关键字的作用","link":"#c-中static关键字的作用","children":[]},{"level":3,"title":"new、operator new与placement new区别是什么?","slug":"new、operator-new与placement-new区别是什么","link":"#new、operator-new与placement-new区别是什么","children":[]},{"level":3,"title":"在A函数里用指针申请好空间后，这块空间需要返回给B函数，然后B函数使用后不再使用这块内存，虽然我们可以手动释放，但往往可能忘记释放，请问用什么方式解决?","slug":"在a函数里用指针申请好空间后-这块空间需要返回给b函数-然后b函数使用后不再使用这块内存-虽然我们可以手动释放-但往往可能忘记释放-请问用什么方式解决","link":"#在a函数里用指针申请好空间后-这块空间需要返回给b函数-然后b函数使用后不再使用这块内存-虽然我们可以手动释放-但往往可能忘记释放-请问用什么方式解决","children":[]},{"level":3,"title":"智能指针shared_ptr的循环引用问题","slug":"智能指针shared-ptr的循环引用问题","link":"#智能指针shared-ptr的循环引用问题","children":[]}]},{"level":2,"title":"类和对象篇","slug":"类和对象篇","link":"#类和对象篇","children":[{"level":3,"title":"构造函数是否可以是虚函数?","slug":"构造函数是否可以是虚函数","link":"#构造函数是否可以是虚函数","children":[]},{"level":3,"title":"析构函数是否可以是虚函数?","slug":"析构函数是否可以是虚函数","link":"#析构函数是否可以是虚函数","children":[]},{"level":3,"title":"构造函数是否可以抛出异常?","slug":"构造函数是否可以抛出异常","link":"#构造函数是否可以抛出异常","children":[]},{"level":3,"title":"析构函数是否可以抛出异常?","slug":"析构函数是否可以抛出异常","link":"#析构函数是否可以抛出异常","children":[]},{"level":3,"title":"如何禁用拷贝构造函数","slug":"如何禁用拷贝构造函数","link":"#如何禁用拷贝构造函数","children":[]},{"level":3,"title":"const成员方法中如果要修改成员变量的值，要怎么做？","slug":"const成员方法中如果要修改成员变量的值-要怎么做","link":"#const成员方法中如果要修改成员变量的值-要怎么做","children":[]},{"level":3,"title":"虚函数的实现原理","slug":"虚函数的实现原理","link":"#虚函数的实现原理","children":[]},{"level":3,"title":"sizeof空的类大小等于多少?","slug":"sizeof空的类大小等于多少","link":"#sizeof空的类大小等于多少","children":[]}]},{"level":2,"title":"STL","slug":"stl","link":"#stl","children":[{"level":3,"title":"vector的扩容机制是怎样的？","slug":"vector的扩容机制是怎样的","link":"#vector的扩容机制是怎样的","children":[]},{"level":3,"title":"push_back和emplace_back的区别","slug":"push-back和emplace-back的区别","link":"#push-back和emplace-back的区别","children":[]},{"level":3,"title":"vector resize/reserve的区别","slug":"vector-resize-reserve的区别","link":"#vector-resize-reserve的区别","children":[]},{"level":3,"title":"deque容器的原理","slug":"deque容器的原理","link":"#deque容器的原理","children":[]}]}],"git":{"createdTime":1675071673000,"updatedTime":1675605958000,"contributors":[{"name":"codebuildingx","email":"codebuildingx@163.com","commits":14}]},"readingTime":{"minutes":10.42,"words":3126},"filePathRelative":"quick/cpp/Outline.md","localizedDate":"2023年1月30日","autoDesc":true}');export{e as data};

import{b as W,c as x,d as B,e as N,f as G,g as V,h as I,B as F,i as Z}from"./app-3ea568a5.js";import{r as m,h as A,c as $,C as _,Y as ee,_ as te,o as se,D as le,j as e,$ as J,x as ae,p as oe,i as ce}from"./framework-f86f98ae.js";const ne="";const z=()=>e(I,{name:"close"},()=>e("path",{d:"m925.468 822.294-303.27-310.288L925.51 201.674c34.683-27.842 38.3-75.802 8.122-107.217-30.135-31.37-82.733-34.259-117.408-6.463L512.001 399.257 207.777 87.993C173.1 60.197 120.504 63.087 90.369 94.456c-30.179 31.415-26.561 79.376 8.122 107.217L401.8 512.005l-303.27 310.29c-34.724 27.82-38.34 75.846-8.117 107.194 30.135 31.437 82.729 34.327 117.408 6.486L512 624.756l304.177 311.22c34.68 27.84 87.272 24.95 117.408-6.487 30.223-31.348 26.56-79.375-8.118-107.195z"}));z.displayName="CloseIcon";const D=()=>e(I,{name:"heading"},()=>e("path",{d:"M250.4 704.6H64V595.4h202.4l26.2-166.6H94V319.6h214.4L352 64h127.8l-43.6 255.4h211.2L691 64h126.2l-43.6 255.4H960v109.2H756.2l-24.6 166.6H930v109.2H717L672 960H545.8l43.6-255.4H376.6L333 960H206.8l43.6-255.4zm168.4-276L394 595.4h211.2l24.6-166.6h-211z"}));D.displayName="HeadingIcon";const w=()=>e(I,{name:"heart"},()=>e("path",{d:"M1024 358.156C1024 195.698 892.3 64 729.844 64c-86.362 0-164.03 37.218-217.844 96.49C458.186 101.218 380.518 64 294.156 64 131.698 64 0 195.698 0 358.156 0 444.518 37.218 522.186 96.49 576H96l320 320c32 32 64 64 96 64s64-32 96-64l320-320h-.49c59.272-53.814 96.49-131.482 96.49-217.844zM841.468 481.232 517.49 805.49a2981.962 2981.962 0 0 1-5.49 5.48c-1.96-1.95-3.814-3.802-5.49-5.48L182.532 481.234C147.366 449.306 128 405.596 128 358.156 128 266.538 202.538 192 294.156 192c47.44 0 91.15 19.366 123.076 54.532L512 350.912l94.768-104.378C638.696 211.366 682.404 192 729.844 192 821.462 192 896 266.538 896 358.156c0 47.44-19.368 91.15-54.532 123.076z"}));w.displayName="HeartIcon";const j=()=>e(I,{name:"history"},()=>e("path",{d:"M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zm0-896a384 384 0 1 0 384 384 384 384 0 0 0-384-384zm192 448H512a64 64 0 0 1-64-64V320a64 64 0 0 1 128 0v128h128a64 64 0 0 1 0 128z"}));j.displayName="HistoryIcon";const T=()=>e(I,{name:"title"},()=>e("path",{d:"M512 256c70.656 0 134.656 28.672 180.992 75.008A254.933 254.933 0 0 1 768 512c0 83.968-41.024 157.888-103.488 204.48C688.96 748.736 704 788.48 704 832c0 105.984-86.016 192-192 192-106.048 0-192-86.016-192-192h128a64 64 0 1 0 128 0 64 64 0 0 0-64-64 255.19 255.19 0 0 1-181.056-75.008A255.403 255.403 0 0 1 256 512c0-83.968 41.024-157.824 103.488-204.544C335.04 275.264 320 235.584 320 192A192 192 0 0 1 512 0c105.984 0 192 85.952 192 192H576a64.021 64.021 0 0 0-128 0c0 35.328 28.672 64 64 64zM384 512c0 70.656 57.344 128 128 128s128-57.344 128-128-57.344-128-128-128-128 57.344-128 128z"}));T.displayName="TitleIcon";const ue={0:"分类：$content",1:"标签：$content"},ie=300,q=5,pe={"/":{cancel:"取消",placeholder:"搜索",search:"搜索",select:"选择",navigate:"切换",exit:"关闭",history:"搜索历史",emptyHistory:"无搜索历史",emptyResult:"没有找到结果",loading:"正在加载搜索索引..."}},re="search-pro-history-results",R=W(re,[]),he=()=>({history:R,addHistory:s=>{R.value.length<q?R.value=[s,...R.value]:R.value=[s,...R.value.slice(0,q-1)]},removeHistory:s=>{R.value=[...R.value.slice(0,s),...R.value.slice(s+1)]}}),ve=m(ne),ye=A(()=>JSON.parse(F(ve.value))),U=(s,r)=>{const h=s.toLowerCase(),l=r.toLowerCase(),c=[];let a=0,p=0;const v=(t,y=!1)=>{let o="";p===0?o=t.length>20?`… ${t.slice(-20)}`:t:y?o=t.length+p>100?`${t.slice(0,100-p)}… `:t:o=t.length>20?`${t.slice(0,20)} … ${t.slice(-20)}`:t,o&&c.push(o),p+=o.length,y||(c.push(["strong",r]),p+=r.length,p>=100&&c.push(" …"))};let d=h.indexOf(l,a);if(d===-1)return null;for(;d>=0;){const t=d+l.length;if(v(s.slice(a,d)),a=t,p>100)break;d=h.indexOf(l,a)}return p<100&&v(s.slice(a),!0),c},M=s=>s.reduce((r,{type:h})=>r+(h==="title"?50:h==="heading"?20:h==="custom"?10:1),0),de=(s,r)=>{var h;const l={};for(const[c,a]of Object.entries(r)){const p=((h=r[c.replace(/\/[^\\]*$/,"")])==null?void 0:h.title)||"",v=`${p?`${p} > `:""}${a.title}`,d=U(a.title,s);d&&(l[v]=[...l[v]||[],{type:"title",path:c,display:d}]),a.customFields&&Object.entries(a.customFields).forEach(([t,y])=>{y.forEach(o=>{const n=U(o,s);n&&(l[v]=[...l[v]||[],{type:"custom",path:c,index:t,display:n}])})});for(const t of a.contents){const y=U(t.header,s);y&&(l[v]=[...l[v]||[],{type:"heading",path:c+(t.slug?`#${t.slug}`:""),display:y}]);for(const o of t.contents){const n=U(o,s);n&&(l[v]=[...l[v]||[],{type:"content",header:t.header,path:c+(t.slug?`#${t.slug}`:""),display:n}])}}}return Object.keys(l).sort((c,a)=>M(l[c])-M(l[a])).map(c=>({title:c,contents:l[c]}))},ge=s=>{const r=x(),h=m([]),l=A(()=>ye.value[r.value]),c=Z(a=>{h.value=a?de(a,l.value):[]},ie);return ae([s,r],()=>{c(s.value)}),h};var me=$({name:"SearchResult",props:{query:{type:String,required:!0}},emits:{close:()=>!0,updateQuery:s=>!0},setup(s,{emit:r}){const h=_(),l=ee(),c=x(),a=B(pe),{history:p,addHistory:v,removeHistory:d}=he(),t=te(s,"query"),y=ge(t),o=m(0),n=m(0),k=m(),S=A(()=>y.value.length>0),f=A(()=>y.value[o.value]||null),Q=()=>{o.value=o.value>0?o.value-1:y.value.length-1,n.value=f.value.contents.length-1},E=()=>{o.value=o.value<y.value.length-1?o.value+1:0,n.value=0},Y=()=>{n.value<f.value.contents.length-1?n.value=n.value+1:E()},P=()=>{n.value>0?n.value=n.value-1:Q()},K=u=>u.map(i=>ce(i)?i:e(i[0],i[1])),X=u=>{if(u.type==="custom"){const i=ue[u.index]||"$content",[C,O=""]=oe(i)?i[c.value].split("$content"):i.split("$content");return K([C,...u.display,O])}return K(u.display)},L=()=>{o.value=0,n.value=0,r("updateQuery",""),r("close")};return se(()=>{N("keydown",u=>{if(S.value){if(u.key==="ArrowUp")P();else if(u.key==="ArrowDown")Y();else if(u.key==="Enter"){const i=f.value.contents[n.value];l.path!==i.path&&(v(i),h.push(i.path),L())}}}),G(k.value,{reserveScrollBarGap:!0})}),le(()=>{V()}),()=>e("div",{class:["search-pro-result",{empty:t.value===""?p.value.length===0:!S.value}],ref:k},t.value===""?p.value.length?e("ul",{class:"search-pro-result-list"},e("li",{class:"search-pro-result-list-item"},[e("div",{class:"search-pro-result-title"},a.value.history),p.value.map((u,i)=>e(J,{to:u.path,class:["search-pro-result-item",{active:n.value===i}],onClick:()=>{console.log("click"),L()}},()=>[e(j,{class:"search-pro-result-type"}),e("div",{class:"search-pro-result-content"},[u.type==="content"&&u.header?e("div",{class:"content-header"},u.header):null,e("div",X(u))]),e("button",{class:"search-pro-close-icon",onClick:C=>{C.preventDefault(),C.stopPropagation(),d(i)}},e(z))]))])):a.value.emptyHistory:S.value?e("ul",{class:"search-pro-result-list"},y.value.map(({title:u,contents:i},C)=>{const O=o.value===C;return e("li",{class:["search-pro-result-list-item",{active:O}]},[e("div",{class:"search-pro-result-title"},u||"Documentation"),i.map((g,b)=>{const H=O&&n.value===b;return e(J,{to:g.path,class:["search-pro-result-item",{active:H,"aria-selected":H}],onClick:()=>{v(g),L()}},()=>[g.type==="content"?null:e(g.type==="title"?T:g.type==="heading"?D:w,{class:"search-pro-result-type"}),e("div",{class:"search-pro-result-content"},[g.type==="content"&&g.header?e("div",{class:"content-header"},g.header):null,e("div",X(g))])])})])})):a.value.emptyResult)}});export{me as default};
